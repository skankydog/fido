@model Fido.ViewModel.Models.Administration.User
@using Fido.ViewModel.Models.Administration

@{
    ViewBag.Title = "Update User";
}

@using (Html.BeginForm("Update", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    @Html.Hidden("Id", Model.Id)
    @Html.Hidden("CreatedUtc", Model.CreatedUtc)
    @Html.Hidden("IsNew", Model.IsNew)
    @Html.Hidden("RowVersion", Model.RowVersion)

    <div class="row">
        <div class="col-md-6 col-xs-12">
            <h4>Local Credentials</h4>
            <div class="hline"></div>
        </div>
        <div class="col-md-6 hidden-xs">
            <h4>External Credentials</h4>
            <div class="hline"></div>
        </div>
        <div class="col-xs-8 col-md-4">
            <div class="input-group">
                <span class="input-group-addon"><i class="fa fa-fw fa-user"></i></span>
                @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", @placeholder = "no local credentials", @value = "", @disabled = "true" })

                @if (Model.LocalCredentialsArePresent)
                {
                    <span class="input-group-addon">
                        <a href="@Url.Action("Delete", "LocalCredential", new { Id = Model.Id })" class="modal-link">
                            <span><i class="fa fa-fw fa-remove"></i></span>
                        </a>
                    </span>
                }
                else
                {
                    <span class="input-group-addon">
                        <a href="@Url.Action("Update", "LocalCredential", new { Id = Model.Id })" class="modal-link">
                            <span><i class="fa fa-fw fa-plus"></i></span>
                        </a>
                    </span>
                }
            </div>
        </div>
        <div class="col-xs-4 col-md-2">
            @if (Model.LocalCredentialsArePresent)
            {
                <div class="input-group">
                    @Html.DropDownListFor(m => m.LocalCredentialState, new SelectList(
                    Model.AllLocalCredentialStates,
                    Model.LocalCredentialState),
                    new { @class = "form-control", @placeholder = "local credential state", @value = "" })
                </div>
            }
        </div>
        <div class="col-xs-12 visible-xs">
            <h4>External Credentials</h4>
            <div class="hline"></div>
        </div>
        <div class="col-xs-8 col-md-4 col-centered">
            @{
                string facebook_colour = "skd-colour-info";
                if (Model.HasFacebook) { facebook_colour = "skd-colour-facebook"; }

                string twitter_colour = "skd-colour-info";
                if (Model.HasTwitter) { twitter_colour = "skd-colour-twitter"; }

                string linkedin_colour = "skd-colour-info";
                if (Model.HasLinkedIn) { linkedin_colour = "skd-colour-linkedin"; }

                string google_colour = "skd-colour-info";
                if (Model.HasGoogle) { google_colour = "skd-colour-google"; }
            }

            <div>
                <div class="col-xs-3 @facebook_colour"><span><i class="fa fa-fw fa-2x fa-facebook"></i></span></div>
                <div class="col-xs-3 @twitter_colour"><span><i class="fa fa-fw fa-2x fa-twitter"></i></span></div>
                <div class="col-xs-3 @linkedin_colour"><span><i class="fa fa-fw fa-2x fa-linkedin"></i></span></div>
                <div class="col-xs-3 @google_colour"><span><i class="fa fa-fw fa-2x fa-google-plus"></i></span></div>
            </div>
        </div>
        <div class="col-xs-4 col-md-2">
            <div class="input-group">
                @if (Model.ExternalCredentialsArePresent)
                {
                    @Html.DropDownListFor(m => m.ExternalCredentialState, new SelectList(
                        Model.AllExternalCredentialStates,
                        Model.ExternalCredentialState),
                        new { @class = "form-control", @placeholder = "external credential state", @value = "" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.ExternalCredentialState, new { @class = "form-control", @placeholder = "external credential state", @value = "", @disabled = "true" })
                }
            </div>
        </div>
    </div>

    @Html.Partial("UserForm", Model)
}
