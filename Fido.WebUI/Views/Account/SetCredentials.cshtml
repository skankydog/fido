@model Fido.Action.Models.SetCredentialsModel

<div class="modal-body">
    <div id="skd-modal-ajax-wrapper">

        <span class="skd-spacing-large"></span>
        <span class="skd-spacing-large"></span>

        @using (Ajax.BeginForm("SetLocalCredentials", "Account",
            new AjaxOptions
            {
                HttpMethod = "POST",
                UpdateTargetId = "skd-modal-ajax-wrapper",
                OnSuccess = "CheckInputState"
            }))
        {
            @Html.AntiForgeryToken()

            <div class="row skd-row-sm-offset-1">
                <div class="col-sm-10">

                    Site credentials will allow you to log into the site without using social logins. Please provide your email address
                    and password and you will be emailed a registration link to confirm your details.
                    <span class="skd-spacing"></span>

                    <span class="skd-spacing"></span>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                        @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", @placeholder = "email address", @value = "" })
                    </div>
                    @Html.ValidationMessageFor(m => m.EmailAddress, "", new { @class = "text-danger" })

                    <span class="skd-spacing"></span>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "password", @value = "" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                    <span class="skd-spacing"></span>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "confirm password", @value = "" })
                    </div>
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })

                    @if (Model != null) { <input type="hidden" id="InputState" name="InputState" value="@Model.InputState" /> }

                    <span class="skd-spacing-large"></span>
                    <div class="col-xs-6 col-centered">
                        <button type="submit" class="btn btn-success btn-circle btn-lg" name="Cmd" value="Save" id="approve-btn">
                            <span><i class="fa fa-check"></i></span>
                        </button>
                    </div>
                    <div class="col-xs-6 col-centered">
                        <a href="@Url.Action("Settings", "Account")">
                            <span class="btn btn-danger btn-circle btn-lg"><i class="fa fa-times"></i></span>
                        </a>
                    </div>
                </div>
            </div>
        }

        <span class="skd-spacing-large"></span>
        <span class="skd-spacing-large"></span>

    </div>
</div>

<script type="text/javascript">
    function CheckInputState() {
        var SuccessPath = '@(Url.Action("Settings", "Account"))';

        if ($("#InputState").val() == 'Success') {
            document.location = SuccessPath;
        }
    }
</script>
